type 'a clist = CNil | Single of 'a | Concat of 'a clist * 'a clist

type 'a list = Nil | Cons of 'a * 'a list


pmrs spec {fun (x,y) -> x >= 0} =
    f Nil -> (0, 0)
    | f Cons(hd, tl) -> (fun (mps, sum) -> max (mps + hd) 0, sum + hd) (f tl)

pmrs (odot, s0, f0) target =
    h CNil          -> s0
    | h Single(a)    -> f0 a
    | h Concat(y, z) -> odot (h y) (h z)

pmrs repr l =
    c CNil -> Nil
    | c Single(a) -> Cons(a, Nil)
    | c Concat(x, y) -> dec y x
    | dec l CNil -> c l
    | dec l Single(a) -> Cons(a, c l)
    | dec l Concat(x, y) -> dec (Concat(y, l)) x