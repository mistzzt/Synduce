type 'a tree = Leaf of 'a | Node of 'a * 'a tree * 'a tree

pmrs spec =
    main Leaf(x) -> x, true
    | main Node(a,l,r) ->
        let lh, lis = main l in
        let rh, ris = h (lh, lis) r in
        a, a < rh && lis && ris
    | h s Leaf(x) -> let y, b = s in x, b && x < y
    | h s Node(a, l, r) ->
        let lh, lis = h s l in
        let rh, ris = h (lh, lis) r in
        a, a < rh && lis && ris


pmrs (join) target =
    main t1 -> h t1
    | h Leaf(a) -> (a, true)
    | h Node(a,l,r) -> join a (h l) (h r)

let repr x = x