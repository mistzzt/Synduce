
let s0  = 0

let join x x0 x1 = x + (x0 + x1)

let join x2 x3 x4 = x2 + (x4 + x3)

target⟨s0, join⟩(): int zipper -> int  = 
{
  ‣ main  Top  ⟹  s0
  ‣ main  Zip(x, a, child, z)  ⟹  join a (spec child) (main z)
  
  }
