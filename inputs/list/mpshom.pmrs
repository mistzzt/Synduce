type 'a clist = CNil | Single of 'a | Concat of 'a clist * 'a clist

type 'a list = Nil | Cons of 'a * 'a list

pmrs spec =
    main l -> f l
    | f Nil -> (0, 0)
    | f Cons(hd,tl) -> (fun (sum,mps) -> max (sum + hd) mps, sum + hd) (f tl)

pmrs (odot) target =
    main t           -> h t
    | h CNil          -> (0, 1)
    | h Single(a)    -> (max a 0, a)
    | h Concat(y, z) -> odot (h y) (h z)

pmrs repr l =
    main l -> c l
    | c CNil -> Nil
    | c Single(a) -> Cons(a, Nil)
    | c Concat(x, y) -> dec y x
    | dec l CNil -> main l
    | dec l Single(a) -> Cons(a, main l)
    | dec l Concat(x, y) -> dec (Concat(l, y)) x